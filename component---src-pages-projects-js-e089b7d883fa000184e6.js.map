{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["projects","data","allCosmicjsProjects","edges","sort","p1","p2","image1","node","metadata","image","url","image2","breakpoint","window","innerHeight","undefined","topComponent","className","title","keywords","map","project","index","link","name","description","key","href","query","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","this"],"mappings":"qOAOe,sBAAe,IACpBA,EADmB,EAAXC,KACQC,oBAAoBC,MAAMC,MAAK,SAACC,EAAIC,GACtD,IAAMC,EAASF,EAAGG,KAAKC,SAASC,MAAMC,IAChCC,EAASN,EAAGE,KAAKC,SAASC,MAAMC,IAEtC,OAAIJ,IAAWK,GAAgB,GAC1BL,GAAUK,EAAe,EACvB,KAEX,OACI,kBAAC,IAAD,CACIC,WAA+B,oBAAXC,OAA0BA,OAAOC,YAAc,OAAIC,EACvEC,aAAc,kBAAM,wBAAIC,UAAU,0BAAd,qCAEpB,kBAAC,IAAD,CAAKC,MAAM,WAAWC,SAAU,CAAC,iBAAD,yBAChC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKpB,EAASqB,KAAI,SAACC,EAASC,GAAW,IAAD,EACaD,EAAQd,KAAKC,SAAhDe,EADsB,EACtBA,KAAMC,EADgB,EAChBA,KAAMC,EADU,EACVA,YAAahB,EADH,EACGA,MACjC,OACI,kBAAC,IAAD,CACIQ,UAAU,YACVO,KAAMA,EACNd,IAAKa,EACLd,MAAOA,EAAMC,KAAO,mGACpBe,YAAaA,EACbC,IAAKJ,QAKrB,uBAAGL,UAAU,eAAb,sBACuB,uBAAGA,UAAU,gBAAgBU,KAAK,oCAAlC,eADvB,UAUjB,IAAMC,EAAK,c,qBClDlB,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnB9B,EAAK,IAAM+B,EAEf,MADkB,KAAdC,IAAkBhC,GAAM,IAAMgC,EAAY,KAAOG,OAAOF,GAAOG,QAAQR,EAAM,UAAY,KACtF5B,EAAK,IAAMkC,EAAI,KAAOH,EAAM,KAErCM,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKX,GACfJ,EAAQA,EAAQiB,EAAIjB,EAAQkB,EAAIjB,GAAM,WACpC,IAAIkB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,kCCfhB,EAAQ,OAAR,CAA0B,QAAQ,SAAUZ,GAC1C,OAAO,SAAcvB,GACnB,OAAOuB,EAAWmB,KAAM,IAAK,OAAQ1C","file":"component---src-pages-projects-js-e089b7d883fa000184e6.js","sourcesContent":["import React from \"react\";\nimport { graphql } from 'gatsby';\nimport { Container, Wrapper, Grid } from '../styles';\n\nimport { Layout, SEO } from '../components';\nimport { ProjectCard } from \"../components/custom\";\n\nexport default ({ data }) => {\n    const projects = data.allCosmicjsProjects.edges.sort((p1, p2) => {\n        const image1 = p1.node.metadata.image.url;\n        const image2 = p2.node.metadata.image.url;\n\n        if (image1 && !image2) return -1;\n        if (!image1 && image2) return 1;\n        return 0;\n    });\n    return (\n        <Layout\n            breakpoint={(typeof window !== 'undefined') ? window.innerHeight / 3 : undefined}\n            topComponent={() => <h1 className='text-center text-white'>Full-stack software development</h1>}\n        >\n            <SEO title=\"Projects\" keywords={[`lucas medeiros`, `projetos`, `projects`]} />\n            <Container>\n                <Wrapper>\n                    <Container>\n                        <Grid>\n                            {projects.map((project, index) => {\n                                const { link, name, description, image } = project.node.metadata;\n                                return (\n                                    <ProjectCard\n                                        className='shadow-lg'\n                                        name={name}\n                                        url={link}\n                                        image={image.url || 'https://www.victorromero.com.br/wp-content/uploads/2019/03/image-placeholder-350x350-300x300.png'}\n                                        description={description}\n                                        key={index}\n                                    />\n                                )\n                            })}\n                        </Grid>\n                        <p className='w-full mt-3'>\n                            For more, visit my <a className='text-blue-600' href='https://github.com/lucasmedeiros'>Github page</a>.\n                        </p>\n                    </Container>\n                </Wrapper>\n            </Container>\n        </Layout>\n    );\n}\n\nexport const query = graphql`\n    query Index {\n        allCosmicjsProjects {\n            edges {\n                node {\n                    title\n                    metadata {\n                        name\n                        description\n                        link\n                        image {\n                            url\n                        }\n                    }\n                }\n            }\n        }\n  }\n`\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}